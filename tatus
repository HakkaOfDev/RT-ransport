[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 62c8935..72cc765 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1 +1,3 @@[m
[31m-.idea/[m
\ No newline at end of file[m
[32m+[m[32m.idea/[m
[32m+[m[32m*/__pycache__[m
[32m+[m[32mvenv/[m
\ No newline at end of file[m
[1mdiff --git a/client/config/Axios.ts b/client/config/Axios.ts[m
[1mindex 0d9ef7b..3189d1f 100644[m
[1m--- a/client/config/Axios.ts[m
[1m+++ b/client/config/Axios.ts[m
[36m@@ -3,6 +3,6 @@[m
  ** See https://axios.nuxtjs.org/options[m
  */[m
 export default {[m
[31m-	baseURL: 'http://localhost:3333/api',[m
 	credentials: true,[m
[32m+[m	[32mproxy: true[m
 }[m
[1mdiff --git a/client/nuxt.config.ts b/client/nuxt.config.ts[m
[1mindex bc18877..1a601a8 100644[m
[1m--- a/client/nuxt.config.ts[m
[1m+++ b/client/nuxt.config.ts[m
[36m@@ -76,7 +76,12 @@[m [mexport default {[m
 		// Doc : https://github.com/nuxt-community/robots-module[m
 		['@nuxtjs/robots', Robots],[m
 	],[m
[31m-[m
[32m+[m	[32m/**[m
[32m+[m	[32m * Proxy[m
[32m+[m	[32m */[m
[32m+[m	[32mproxy: {[m
[32m+[m		[32m'/api/v1/services': { target: 'http://localhost:8887/api/v1/services', changeOrigin: true }[m
[32m+[m	[32m},[m
 	/**[m
 	 ** Environnements variables settings[m
 	 ** Don't forget to specifie 'process.client'[m
[1mdiff --git a/client/src/components/navbar/Navbar.vue b/client/src/components/navbar/Navbar.vue[m
[1mindex 12b293c..137ae87 100644[m
[1m--- a/client/src/components/navbar/Navbar.vue[m
[1m+++ b/client/src/components/navbar/Navbar.vue[m
[36m@@ -29,7 +29,7 @@[m
 							<fa :icon="['fas', 'search']"/>[m
 						</a>[m
 					</form>[m
[31m-					<a href="/about-me"[m
[32m+[m					[32m<a href="/authentication"[m
 					   class="text-base leading-6 font-medium text-2xl text-gray-800 hover:text-red-500 focus:outline-none focus:text-red-500 transition ease-in-out duration-150">[m
 						<fa :icon="['fas', 'user']"/>[m
 					</a>[m
[1mdiff --git a/client/src/locales/en-US.ts b/client/src/locales/en-US.ts[m
[1mindex 7ae6c74..d10787f 100644[m
[1m--- a/client/src/locales/en-US.ts[m
[1m+++ b/client/src/locales/en-US.ts[m
[36m@@ -3,5 +3,9 @@[m [mexport default {[m
 	tariff_nav_title: 'Prices',[m
 	search_nav_title: 'Search',[m
 	transport_revolution: 'The packages transport revolution',[m
[31m-	colis_research: 'Delivery or order code, etc..'[m
[32m+[m	[32mcolis_research: 'Delivery or order code, etc..',[m
[32m+[m	[32mauth_title: 'Sign In',[m
[32m+[m	[32mauth_user: 'Email...',[m
[32m+[m	[32mauth_password: 'Password...',[m
[32m+[m	[32msubmit: 'Submit',[m
 }[m
[1mdiff --git a/client/src/locales/fr-FR.ts b/client/src/locales/fr-FR.ts[m
[1mindex febd7f2..aadac3d 100644[m
[1m--- a/client/src/locales/fr-FR.ts[m
[1m+++ b/client/src/locales/fr-FR.ts[m
[36m@@ -3,5 +3,9 @@[m [mexport default {[m
 	tariff_nav_title: 'Tarifs',[m
 	search_nav_title: 'Rechercher',[m
 	transport_revolution: 'La r√©volution du transport de colis',[m
[31m-	colis_research: 'Num√©ro de colis, etc..'[m
[32m+[m	[32mcolis_research: 'Num√©ro de colis, etc..',[m
[32m+[m	[32mauth_title: 'S\'identifier',[m
[32m+[m	[32mauth_user: 'Email...',[m
[32m+[m	[32mauth_password: 'Mot de passe...',[m
[32m+[m	[32msubmit: 'Envoyer',[m
 }[m
[1mdiff --git a/client/src/template/layouts/master.vue b/client/src/template/layouts/master.vue[m
[1mindex c5c4634..726f6a6 100644[m
[1m--- a/client/src/template/layouts/master.vue[m
[1m+++ b/client/src/template/layouts/master.vue[m
[36m@@ -11,7 +11,7 @@[m
 [m
 <script>[m
 import LangSwitcher from '~/components/LangSwitcher'[m
[31m-import Navbar from '~/components/navbar/navbar';[m
[32m+[m[32mimport Navbar from '~/components/navbar/Navbar';[m
 import NavResponsive from "~/components/responsivenav/NavResponsive";[m
 [m
 export default {[m
[1mdiff --git a/server/api/routes/UserRoute.py b/server/api/routes/UserRoute.py[m
[1mindex 8bca664..93491c5 100644[m
[1m--- a/server/api/routes/UserRoute.py[m
[1m+++ b/server/api/routes/UserRoute.py[m
[36m@@ -14,9 +14,12 @@[m [musers_bp = Blueprint('users_bp', __name__)[m
 def getAllUsers():[m
     users = userService.findAll()[m
     response = [][m
[31m-    for user in users:[m
[31m-        response.append(json.loads(json.dumps(user, indent=4, cls=UserEncoder)))[m
[31m-    return jsonify(response)[m
[32m+[m[32m    if users != None:[m
[32m+[m[32m        for user in users:[m
[32m+[m[32m            response.append(json.loads(json.dumps(user, indent=4, cls=UserEncoder)))[m
[32m+[m[32m        return jsonify(response)[m
[32m+[m[32m    else:[m
[32m+[m[32m        return "Users not found"[m
 [m
 [m
 @users_bp.route(URL_USER + 'register', methods=['POST'])[m
[36m@@ -38,7 +41,7 @@[m [mdef loginUser():[m
     password = data['password'][m
     if userService.ifUserExistsWithEmail(email):[m
         if userService.loginUser(email, password):[m
[31m-            abort(Response('Login successful', status=200, mimetype='application/json'))[m
[32m+[m[32m            abort(Response('success login', status=200, mimetype='application/json'))[m
         else:[m
             abort(Response('Invalid credentials', status=400, mimetype='application/json'))[m
     else:[m
[1mdiff --git a/server/api/routes/__pycache__/UserRoute.cpython-39.pyc b/server/api/routes/__pycache__/UserRoute.cpython-39.pyc[m
[1mindex 86747a7..7f652e2 100644[m
Binary files a/server/api/routes/__pycache__/UserRoute.cpython-39.pyc and b/server/api/routes/__pycache__/UserRoute.cpython-39.pyc differ
[1mdiff --git a/server/data/__pycache__/User.cpython-39.pyc b/server/data/__pycache__/User.cpython-39.pyc[m
[1mindex f8d17dc..75ba971 100644[m
Binary files a/server/data/__pycache__/User.cpython-39.pyc and b/server/data/__pycache__/User.cpython-39.pyc differ
[1mdiff --git a/server/main.py b/server/main.py[m
[1mindex cb35d6c..42d64d3 100644[m
[1m--- a/server/main.py[m
[1m+++ b/server/main.py[m
[36m@@ -1,12 +1,16 @@[m
 from flask import Flask[m
 from flask_restplus import Api[m
[32m+[m[32mfrom flask_cors import CORS[m
 [m
 from api.routes.UserRoute import users_bp[m
 [m
 app = Flask(__name__)[m
[32m+[m[32mcors = CORS(app, resources={r"/api/*": {"origins": "*"}})[m
[32m+[m
 api_restful = Api(app=app, version='0.1', title='RT\'ransport API', description='', validate=True)[m
 app.register_blueprint(users_bp)[m
 [m
 if __name__ == "__main__":[m
[32m+[m[32m    app.config['CORS_HEADERS'] = 'application/json'[m
     app.config['JSON_SORT_KEYS'] = False[m
     app.run(debug=True, port=8887, host='localhost')[m
[1mdiff --git a/server/services/UserService.py b/server/services/UserService.py[m
[1mindex df0a6f7..c08923a 100644[m
[1m--- a/server/services/UserService.py[m
[1m+++ b/server/services/UserService.py[m
[36m@@ -10,9 +10,10 @@[m [mclass UserService(Service):[m
     def findAll(self):[m
         users = [][m
         rows = self.sql.getRows('SELECT * FROM users')[m
[31m-        for user in rows:[m
[31m-            users.append(User(user[0], user[1], user[2], user[3], user[4], user[5], user[6], user[7]))[m
[31m-        return users[m
[32m+[m[32m        if rows != None:[m
[32m+[m[32m            for user in rows:[m
[32m+[m[32m                users.append(User(user[0], user[1], user[2], user[3], user[4], user[5], user[6], user[7]))[m
[32m+[m[32m            return users[m
 [m
     def getUserByEmail(self, email):[m
         print(email)[m
[1mdiff --git a/server/services/__pycache__/Service.cpython-39.pyc b/server/services/__pycache__/Service.cpython-39.pyc[m
[1mindex cbcbb40..3b11add 100644[m
Binary files a/server/services/__pycache__/Service.cpython-39.pyc and b/server/services/__pycache__/Service.cpython-39.pyc differ
[1mdiff --git a/server/services/__pycache__/UserService.cpython-39.pyc b/server/services/__pycache__/UserService.cpython-39.pyc[m
[1mindex 91104ae..8b33581 100644[m
Binary files a/server/services/__pycache__/UserService.cpython-39.pyc and b/server/services/__pycache__/UserService.cpython-39.pyc differ
[1mdiff --git a/server/services/database/__pycache__/SQLService.cpython-39.pyc b/server/services/database/__pycache__/SQLService.cpython-39.pyc[m
[1mindex 5fc8934..073f5c0 100644[m
Binary files a/server/services/database/__pycache__/SQLService.cpython-39.pyc and b/server/services/database/__pycache__/SQLService.cpython-39.pyc differ
[1mdiff --git a/server/tools/__pycache__/Keys.cpython-39.pyc b/server/tools/__pycache__/Keys.cpython-39.pyc[m
[1mindex f7e4312..83fa841 100644[m
Binary files a/server/tools/__pycache__/Keys.cpython-39.pyc and b/server/tools/__pycache__/Keys.cpython-39.pyc differ
